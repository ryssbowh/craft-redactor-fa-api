"use strict";function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}var FaGraphQl=function(){function n(e,t){_classCallCheck(this,n),this.version=e,this.license=t}return _createClass(n,[{key:"search",value:function(e){var s=this;return new Promise(function(o,t){s.query('search(version:"'+s.version+'",query:"'+e+'") {membership {free, pro},id,label}').then(function(e){var t,n=[];for(t in e.data.search){var i=e.data.search[t].membership[s.license];i.length&&n.push({id:e.data.search[t].id,label:e.data.search[t].label,styles:i})}o(n)},function(e){t(e)})})}},{key:"icons",value:function(){var i=this;return this.iconList?new Promise(function(e,t){e(i.iconList)}):new Promise(function(t,n){i.release('icons(license: "'+i.license+'") {id,label,styles}').then(function(e){t(e.data.release.icons)},function(e){n(e)})})}},{key:"release",value:function(e){return this.query('release(version:"'+this.version+'"){'+e+"}")}},{key:"query",value:function(e){var i={query:"query {"+e+"}"};return new Promise(function(t,n){$.ajax({method:"post",url:"https://api.fontawesome.com",data:i,dataType:"json"}).done(function(e){if(e.errors)return n(e.errors);t(e)})})}}]),n}();!function(){var e;Redactor.add("plugin","fontawesome",{keyupTimeout:null,modal:null,form:null,translations:{en:(_defineProperty(e={title:"Font Awesome Icon",search:"Enter an icon name",cancel:"Cancel",placeholder:"Icon name or id"},"search","Search"),_defineProperty(e,"loading","Loading..."),_defineProperty(e,"apiError","Couldn't fetch icons from the api"),e)},modals:{fontawesome:'<div class="redactor-fa-modal">            <form action="">                <input name="icon-name" placeholder="## placeholder ##" autocomplete="off">            </form>            <div class="result-list-wrapper">                <div class="loading">## loading ##</div>                <div class="errors"></div>                <div class="result-list"></div>            </div>            </div>'},init:function(e){this.app=e,this.opts=e.opts,this.lang=e.lang,this.toolbar=e.toolbar,this.insertion=e.insertion,e.opts.redactorFaApi.preventReplaceI&&delete e.opts.replaceTags.i,"path"==this.opts.redactorFaApi.mode?this._initPath():this._initKit()},_initPath:function(){this.graphQl=new FaGraphQl(this.opts.redactorFaApi.version,this.opts.redactorFaApi.license)},_initKit:function(){this.graphQl=new FaGraphQl(window.FontAwesomeKitConfig.version,window.FontAwesomeKitConfig.license)},onmodal:{fontawesome:{opened:function(e,t){var n=this;this.modal=e,(this.form=t).getField("icon-name").focus(),t.getField("icon-name").on("click",function(e){e.stopPropagation()}),t.getField("icon-name").on("focus",function(e){n._showList(),n._search()}),t.getField("icon-name").on("keyup",function(e){clearTimeout(n.keyupTimeout),e.target.value?(n._showList(),n.keyupTimeout=setTimeout(function(){n._search()},300)):n._closeList()}),t.on("submit",function(e){e.preventDefault()}),document.addEventListener("click",function(){n._closeList()})}}},start:function(){var e={title:this.lang.get("title"),api:"plugin.fontawesome.open"};this.toolbar.addButton("title",e).setIcon('<i class="fa-solid fa-font-awesome"></i>')},open:function(){var e={title:this.lang.get("myplugin"),width:"600px",name:"fontawesome",handle:"fontawesome"};this.app.api("module.modal.build",e)},_search:function(){var e,t,n,i=this,o=this.form.getField("icon-name").val();o&&(e=this.modal.nodes[0].querySelector(".errors"),t=this.modal.nodes[0].querySelector(".loading"),n=this.modal.nodes[0].querySelector(".result-list"),this.graphQl.search(o).then(function(e){i._buildResults(e,n),t.style.display="none"},function(){t.style.display="none",i._showError(e)}))},_showError:function(e){e.style.display="block",e.innerHTML=this.lang.get("apiError")},_buildResults:function(e,i){var o=this;e.forEach(function(n){n.styles.forEach(function(e){var t="fa-"+e+" fa-"+n.id,e=document.createElement("div");e.classList.add("icon"),e.innerHTML='<i class="'+t+'"></i><label>'+n.label+"</label>",i.append(e),e.addEventListener("click",function(){o._insert(t)})})})},_showList:function(){this.modal.nodes[0].querySelector(".loading").style.display="block",this.modal.nodes[0].querySelector(".errors").style.display="none",this.modal.nodes[0].querySelector(".result-list").innerHTML="",this.modal.nodes[0].querySelector(".result-list-wrapper").style.display="block"},_closeList:function(){this.modal.nodes[0].querySelector(".result-list-wrapper").style.display="none"},_insert:function(e){this._closeList(),this.app.api("module.modal.close"),this.insertion.insertHtml('<span><i class="'+e+'"></i></span>')}})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
